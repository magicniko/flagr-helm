# If you set autoscaling.enabled below, this value doesn't matter
replicaCount: 2

image:
  repository: ghcr.io/openflagr/flagr
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.1.14"

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "flagr"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 18000

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: flagr.example.com
      paths:
        - path: /api/v1/evaluation
          pathType: ImplementationSpecific
        - path: /api/v1/health
          pathType: ImplementationSpecific
          ## only use this if you intend not to use Cloudflared, comment out the other two
          #         - path: /
          #           pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling: {}
#   enabled: true
#   minReplicas: 2
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   targetMemoryUtilizationPercentage: 50

cloudflared: {}
#   enabled: true
#   tunnelId: "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
#   ingressHostname: "flagr-admin.example.com"
#   cloudflaredImage: "cloudflare/cloudflared"
#   cloudflaredVersion: "2022.9.0-amd64"

datadog: {}
#   enabled: "true"
#   env: "production"
#   serviceName: "flagr"
#   flagrVersion: 1.1.14

flagrEnv: {}
#   foo: bar

externalSecrets: {}
#   enabled: true
#   refreshInterval: 1m
#   secretStoreRef: production-cluster-secret-store
#   secretStoreKind: ClusterSecretStore
#   secrets:
#     FLAGR_DB_PASSWORD:
#       secretName: ssm-secret-name
#       property: password

nodeSelector: {}

tolerations: []

affinity: {}
